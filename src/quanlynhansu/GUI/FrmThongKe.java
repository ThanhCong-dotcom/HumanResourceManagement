/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlynhansu.GUI;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;

import quanlynhansu.Model.NhanVien;
import quanlynhansu.DAO.NhanVienDAO;
import quanlynhansu.DAO.ThongKeDAO;

/**
 *
 * @author Acer
 */
public class FrmThongKe extends javax.swing.JInternalFrame {

    ArrayList<NhanVien> listnv = new ArrayList<>();
    DefaultTableModel model;

    NhanVienDAO nvdao = new NhanVienDAO();
    ThongKeDAO tkdao = new ThongKeDAO();

    /**
     * Creates new form FrmThongKe
     */
    public FrmThongKe() {
        initComponents();
        load();
        loadTableLuong();
        tongNV();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTKNhanVien = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cbxTKGioiTinh = new javax.swing.JComboBox<>();
        lbTongNhanVien = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbxTrinhDoHV = new javax.swing.JComboBox<>();
        btnxuat = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbtkLuong = new javax.swing.JTable();
        btnXuatExcelLuong = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setTitle("Thống kê");
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPane1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tbTKNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhân viên", "Mã phòng ban ", "Mã hợp đồng", "Hs Lương ", "họ tên", "Giới tính", "Ngày sinh", "CMND ", "SDT", "Trình độ HV", "Địa chỉ", "Email", "TT Hôn nhân"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, true, true, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbTKNhanVien);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Giới tính :");

        cbxTKGioiTinh.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        cbxTKGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Nam", "Nữ" }));
        cbxTKGioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTKGioiTinhActionPerformed(evt);
            }
        });

        lbTongNhanVien.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lbTongNhanVien.setText("Tổng số nhân viên :");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Trình độ học vấn :");

        cbxTrinhDoHV.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        cbxTrinhDoHV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Đại Học", "Cao Đẳng" }));
        cbxTrinhDoHV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTrinhDoHVActionPerformed(evt);
            }
        });

        btnxuat.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnxuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlynhansu/Icon/icons8-export-excel-24.png"))); // NOI18N
        btnxuat.setText("Xuất Excel");
        btnxuat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnxuat.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnxuatMouseMoved(evt);
            }
        });
        btnxuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnxuatMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnxuatMousePressed(evt);
            }
        });
        btnxuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxuatActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 255));
        jLabel3.setText("Thống kê nhân viên");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxTKGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(lbTongNhanVien)
                .addGap(123, 123, 123)
                .addComponent(jLabel2)
                .addGap(35, 35, 35)
                .addComponent(cbxTrinhDoHV, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnxuat)
                .addGap(75, 75, 75))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 19, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(469, 469, 469)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbxTKGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTongNhanVien)
                    .addComponent(jLabel2)
                    .addComponent(cbxTrinhDoHV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnxuat, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Nhân viên", jPanel1);

        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tbtkLuong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhân viên", "Tên nhân viên", "Lương CB", "HS Lương ", "Giới tính", "Phụ cấp", "Số ngày công", "Số giờ tăng ca", "Lương Thực lãnh"
            }
        ));
        jScrollPane2.setViewportView(tbtkLuong);

        btnXuatExcelLuong.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnXuatExcelLuong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlynhansu/Icon/icons8-export-excel-24.png"))); // NOI18N
        btnXuatExcelLuong.setText("Xuất Excel");
        btnXuatExcelLuong.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXuatExcelLuong.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnXuatExcelLuongMouseMoved(evt);
            }
        });
        btnXuatExcelLuong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnXuatExcelLuongMouseExited(evt);
            }
        });
        btnXuatExcelLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelLuongActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 255));
        jLabel4.setText("Thống kê Lương");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXuatExcelLuong)
                .addGap(53, 53, 53))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(477, 477, 477)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(btnXuatExcelLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Lương", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1152, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  private void load() {
        listnv = nvdao.load();
        model = (DefaultTableModel) tbTKNhanVien.getModel();
        model.setRowCount(0);
        for (NhanVien nv : listnv) {
            model.addRow(new Object[]{
                nv.getMaNhanVien(),
                nv.getMaPB(),
                nv.getMaHD(),
                nv.getHeSoLuong(),
                nv.getTenNV(),
                nv.getGioiTinh(),
                nv.getNgaySinh(),
                nv.getSoCM(),
                nv.getDienThoai(),
                nv.getTrinhDoHV(),
                nv.getDiaChi(),
                nv.getEmail(),
                nv.getTTHonNhan()
            });
        }
    }

    private void loadGT(String gioitinh) {
        listnv = tkdao.loadGioiTinh(gioitinh);
        model = (DefaultTableModel) tbTKNhanVien.getModel();
        model.setRowCount(0);
        for (NhanVien nv : listnv) {
            model.addRow(new Object[]{
                nv.getMaNhanVien(),
                nv.getMaPB(),
                nv.getMaHD(),
                nv.getHeSoLuong(),
                nv.getTenNV(),
                nv.getGioiTinh(),
                nv.getNgaySinh(),
                nv.getSoCM(),
                nv.getDienThoai(),
                nv.getTrinhDoHV(),
                nv.getDiaChi(),
                nv.getEmail(),
                nv.getTTHonNhan()
            });
        }
    }

    private void loadTrinhDoHV(String Trinhdo) {
        listnv = tkdao.loadTrinhDoHV(Trinhdo);
        model = (DefaultTableModel) tbTKNhanVien.getModel();
        model.setRowCount(0);
        for (NhanVien nv : listnv) {
            model.addRow(new Object[]{
                nv.getMaNhanVien(),
                nv.getMaPB(),
                nv.getMaHD(),
                nv.getHeSoLuong(),
                nv.getTenNV(),
                nv.getGioiTinh(),
                nv.getNgaySinh(),
                nv.getSoCM(),
                nv.getDienThoai(),
                nv.getTrinhDoHV(),
                nv.getDiaChi(),
                nv.getEmail(),
                nv.getTTHonNhan()
            });
        }
    }
    private void cbxTKGioiTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTKGioiTinhActionPerformed
        // TODO add your handling code here:
        if (cbxTKGioiTinh.getSelectedItem().equals("Tất cả")) {
            tongNV();
            load();
        } else if (cbxTKGioiTinh.getSelectedItem().equals("Nam")) {
            cbxTrinhDoHV.setSelectedIndex(0);
            loadGT("Nam");
            int tong = tkdao.TKTongSoGTNhanVien("Nam");
            lbTongNhanVien.setText("Số nhân viên Nam :" + String.valueOf(tong));
        } else {
            cbxTrinhDoHV.setSelectedIndex(0);
            loadGT("Nữ");
            int tong1 = tkdao.TKTongSoGTNhanVien("Nữ");
            lbTongNhanVien.setText("Số nhân viên Nữ :" + String.valueOf(tong1));

        }
    }//GEN-LAST:event_cbxTKGioiTinhActionPerformed

    private void cbxTrinhDoHVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTrinhDoHVActionPerformed
        // TODO add your handling code here:
        if (cbxTrinhDoHV.getSelectedItem().equals("Tất cả")) {
            tongNV();
            load();

        } else if (cbxTrinhDoHV.getSelectedItem().equals("Đại Học")) {
            cbxTKGioiTinh.setSelectedIndex(0);
            loadTrinhDoHV("Đại Học");
               int tong = tkdao.TKTongSoTrinhdoHV("Đại Học");
            lbTongNhanVien.setText("Số nhân viên trình độ đại học :" + String.valueOf(tong));
        } else {
            cbxTKGioiTinh.setSelectedIndex(0);
           loadTrinhDoHV("Cao Đẳng");
           int tong1 = tkdao.TKTongSoTrinhdoHV("Cao Đẳng");
            lbTongNhanVien.setText("Số nhân viên trình độ cao đẳng :" + String.valueOf(tong1));
        }

    }//GEN-LAST:event_cbxTrinhDoHVActionPerformed

    private void ExcelTKNhanVien() {
        FileOutputStream outFile = null;
        try {
            // TODO add your handling code here:
            model = (DefaultTableModel) tbTKNhanVien.getModel();
            HSSFWorkbook workbook = new HSSFWorkbook();
            HSSFFont font = workbook.createFont();
            font.setBold(true);
            HSSFCellStyle style = workbook.createCellStyle();
            style.setFont(font);
            HSSFSheet sh = workbook.createSheet("Employees sheet");

            Row row = sh.createRow(0);
            for (int i = 0; i < model.getColumnCount(); i++) {// lặp để lấy header của cột
                Cell cell = row.createCell(i);
                cell.setCellValue(model.getColumnName(i));
            }
            for (int i = 0; i < model.getRowCount(); i++) {//lặp lần lượt dòng đến cột 
                row = sh.createRow(i + 1);
                for (int j = 0; j < model.getColumnCount(); j++) {
                    Cell cell = row.createCell(j);
                    cell.setCellValue(model.getValueAt(i, j).toString());
                }
            }
            JFileChooser chooser = new JFileChooser();
            int i = chooser.showSaveDialog(chooser);
            if (i == JFileChooser.APPROVE_OPTION);
            File file = chooser.getSelectedFile();
            file.getParentFile().mkdirs();
            outFile = new FileOutputStream(file + ".xls");
            try {
                workbook.write(outFile);
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(FrmThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(rootPane, "Xuất file thành công");

        } catch (FileNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } finally {
            try {
                outFile.close();
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(FrmThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }

    }

    private void ExcelTKLuong() {
        FileOutputStream outFile = null;
        try {
            // TODO add your handling code here:
            model = (DefaultTableModel) tbtkLuong.getModel();
            HSSFWorkbook workbook = new HSSFWorkbook();
            HSSFFont font = workbook.createFont();
            font.setBold(true);
            HSSFCellStyle style = workbook.createCellStyle();
            style.setFont(font);
            HSSFSheet sh = workbook.createSheet("Employees sheet");

            Row row = sh.createRow(0);
            for (int i = 0; i < model.getColumnCount(); i++) {// lặp để lấy header của cột
                Cell cell = row.createCell(i);
                cell.setCellValue(model.getColumnName(i));
            }
            for (int i = 0; i < model.getRowCount(); i++) {//lặp lần lượt dòng đến cột 
                row = sh.createRow(i + 1);
                for (int j = 0; j < model.getColumnCount(); j++) {
                    Cell cell = row.createCell(j);
                    cell.setCellValue(model.getValueAt(i, j).toString());
                }
            }
            JFileChooser chooser = new JFileChooser();
            int i = chooser.showSaveDialog(chooser);
            if (i == JFileChooser.APPROVE_OPTION);
            File file = chooser.getSelectedFile();
            file.getParentFile().mkdirs();
            outFile = new FileOutputStream(file + ".xls");
            try {
                workbook.write(outFile);
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(FrmThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(rootPane, "Xuất file thành công");

        } catch (FileNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } finally {
            try {
                outFile.close();
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(FrmThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }

    }

    private void btnxuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxuatActionPerformed

        ExcelTKNhanVien();
    }//GEN-LAST:event_btnxuatActionPerformed

    private void btnxuatMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnxuatMousePressed
        // TODO add your handling code here:
//        btnxuat.setBackground(Color.green);
    }//GEN-LAST:event_btnxuatMousePressed

    private void btnxuatMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnxuatMouseMoved
        // TODO add your handling code here:
        btnxuat.setBackground(Color.green);
    }//GEN-LAST:event_btnxuatMouseMoved

    private void btnxuatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnxuatMouseExited
        // TODO add your handling code here:
        btnxuat.setBackground(null);
    }//GEN-LAST:event_btnxuatMouseExited

    private void btnXuatExcelLuongMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatExcelLuongMouseExited
        // TODO add your handling code here:
        btnXuatExcelLuong.setBackground(null);
    }//GEN-LAST:event_btnXuatExcelLuongMouseExited

    private void btnXuatExcelLuongMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatExcelLuongMouseMoved
        // TODO add your handling code here:
                btnXuatExcelLuong.setBackground(Color.GREEN);

    }//GEN-LAST:event_btnXuatExcelLuongMouseMoved

    private void btnXuatExcelLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelLuongActionPerformed
        // TODO add your handling code here:
        ExcelTKLuong();
    }//GEN-LAST:event_btnXuatExcelLuongActionPerformed
    private void tongNV() {
        int tong = tkdao.TKTongSoNhanVien();
        String name = "Tổng số nhân viên :" + String.valueOf(tong);
        lbTongNhanVien.setText(name);
    }

    private void loadTableLuong() {
        model = (DefaultTableModel) tbtkLuong.getModel();
        model.setRowCount(0);
        List<Object[]> list = tkdao.TKLuong();
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnXuatExcelLuong;
    private javax.swing.JButton btnxuat;
    private javax.swing.JComboBox<String> cbxTKGioiTinh;
    private javax.swing.JComboBox<String> cbxTrinhDoHV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbTongNhanVien;
    private javax.swing.JTable tbTKNhanVien;
    private javax.swing.JTable tbtkLuong;
    // End of variables declaration//GEN-END:variables
}
